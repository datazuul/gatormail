# Example config file for GatorMail AutoPurge
#
# Settings can also be set via the command line. eg:
# java -Dmail.store.protocol=imaps -jar AutoPurge.jar MyConfig.properties
#
# Required properties have two hash marks in the comment before them.
#

## See JavaMail config properties
mail.store.protocol=imap
## See JavaMail config properties
mail.imap.host=imap.example.com
## See JavaMail config properties
mail.imaps.host=imap.example.com
# See JavaMail: 10 second time outs
mail.imap.connectiontimeout=10000
mail.imap.timeout=10000
# See JavaMail: dumps session traffic to stdout or stderr
#mail.debug=debug
# Any other JavaMail property could be included here too.

## The privilaged username and password to authenticate as
#autopurge.authentication.name=mail-admin
#autopurge.authentication.pass=mail-pass

# User mailbox namespace prefix folder
#autopurge.namespace.user=user

# Randomize the order in which user names are processed
#autopurge.usernames.shuffle=true

## List of folder roots to search for purgeable messages
autopurge.purge.roots=INBOX/Trash,INBOX/Junk

# If set a java.util.regex.Pattern to match usernames against
#autopurge.purge.pattern=regex

# The flag name base to use to indicate a message was found in a purgeable folder
#autopurge.purge.flag.prefix=Discarded-

# The java.text.SimpleDateFormat format to encode the date in to the purge flag
#autopurge.purge.flag.format=yyyy-MM-dd

## Number of days after wich to purge messages. Negative pretends, zero disables date check, positve will purge
autopurge.expire.after.days=-30


############################################################
############################################################
# Everything below here is config settings that can affect
# logging. To use them you must tell Java to load this
# config file as your logging config file with:
#
# -Djava.util.logging.config.file=myfile
#
# otherwise they will have no effect. This means you may want
# to specify this config file twice on the command line. eg:
# java -Djava.util.logging.config.file=MyConfig.properties -jar AutoPurge.jar MyConfig.properties
# Or you could split this file in to two parts.
#
#############################################################

# The most effective way to control logging is to tweak the
# java.util.logging.ConsoleHandler.level and
# edu.ufl.osg.autopurge.*.level settings in the middle and
# end of this file.

############################################################
#       Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
handlers= java.util.logging.ConsoleHandler

# To also add the FileHandler, use the following line instead.
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level= INFO
#.level= WARNING

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# default file output is in user's home directory.
java.util.logging.FileHandler.pattern = %h/java%u.log
java.util.logging.FileHandler.limit = 50000
java.util.logging.FileHandler.count = 1
java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter

# Should keeps 5 versions in /var/log/AutoPurge{0,1,2,3,4}.log with a max size of 1 meg 
#java.util.logging.FileHandler.pattern = /var/log/AutoPurge%g.log
#java.util.logging.FileHandler.limit = 1000000
#java.util.logging.FileHandler.count = 5
#java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter

# Limit the message that are printed on the console to INFO and above.
#java.util.logging.ConsoleHandler.level = ALL
java.util.logging.ConsoleHandler.level = INFO
#java.util.logging.ConsoleHandler.level = WARNING
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# To control all of GatorMail AutoPurge logging
#edu.ufl.osg.autopurge.level = ALL

# To control the launcher's logging
# SEVERE: Exceptions that terminate the program
# INFO: Common messages
# FINE: Count of usernames discovered
# FINEST: List of usernames discovered
#edu.ufl.osg.autopurge.Main.level = INFO

# To control the purger's logging
# INFO: Common messages about what will happen
#edu.ufl.osg.autopurge.AutoPurge.level = INFO

# To control the purger's configuration logging
# CONFIG: Current configuration
#edu.ufl.osg.autopurge.AutoPurge.<init>.level = INFO

# To control discovery of usernames logging. this can get very detailed
# FINE: Most JavaMail exceptions
# FINER: Store.close() JavaMail exceptions, usernames matching the pattern
# FINEST: usernames excluded by the pattern
#edu.ufl.osg.autopurge.AutoPurge.discoverUserNames.level = INFO

# To control the genral purge logging. This can also get very detailed
# WARNING: Exceptions that cause the purge process to skip to the next username
# FINE: current username, most non-fatal exceptions
# FINER: Store.close() JavaMail exceptions
#edu.ufl.osg.autopurge.AutoPurge.purgeMailbox.level = INFO

# To control the purge of messages logging. This can also get very detailed
# WARNING: Unexpected exceptions
# FINE: Exceptions that cause the purge process to skip to the next folder
# FINER: Exceptions that cause a message not to be processed
# FINEST: Exceptions from trying to parse flags
#edu.ufl.osg.autopurge.AutoPurge.purgeMessage.level = INFO
